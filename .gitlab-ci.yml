variables:
    REGISTRY_URL: registry.app.nationaalwerknemerplan.nl
    REGISTRY_IMAGE: registry.app.nationaalwerknemerplan.nl/nwp/nwp-website-react
    VERSION_STAGING: $CI_COMMIT_REF_NAME-$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA
    VERSION_PRODUCTION: $CI_COMMIT_REF_NAME-$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA-production
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    STAGING_BASE_URL: https://nwp-backend.stag.app.nationaalwerknemerplan.nl
    IMAGE_SERVICE_URL: https://files.nationaalwerknemerplan.nl
    PRODUCTION_BASE_URL: https://nwp-backend.nationaalwerknemerplan.nl
    NWP_STAGING_AUTH_URL: https://nwp-website-react.stag.app.nationaalwerknemerplan.nl/auth
    NWP_PRODUCTION_AUTH_URL: https://nwp.nationaalwerknemerplan.nl/auth
    VM_STAGING_AUTH_URL: https://vm-website.stag.app.nationaalwerknemerplan.nl/auth
    VM_PRODUCTION_AUTH_URL: https://vm.nationaalwerknemerplan.nl/auth
stages:
  - build-staging
  - deploy-staging
  - build-production
  - deploy-production

build-staging:
  stage: build-staging
  image: appuio/gitlab-runner-oc:3.11.0
  only:
    - devops-staging
  services:
    - docker:dind
  script:
    - docker login $REGISTRY_URL -u $NWP_REGISTRY_USER -p $NWP_REGISTRY_PASS
    - docker build -t $REGISTRY_IMAGE:$VERSION_STAGING . --build-arg NEXT_PUBLIC_BASE_URL=$STAGING_BASE_URL --build-arg NEXT_PUBLIC_IMAGE_URL=$IMAGE_SERVICE_URL --build-arg NEXT_PUBLIC_UPLOAD_URL=$IMAGE_SERVICE_URL --build-arg NEXT_PUBLIC_NWP_AUTH_URL=$NWP_STAGING_AUTH_URL --build-arg NEXT_PUBLIC_VM_AUTH_URL=$VM_STAGING_AUTH_URL
    - docker push $REGISTRY_IMAGE:$VERSION_STAGING
    - docker rmi $REGISTRY_IMAGE:$VERSION_STAGING

deploy-staging:
  stage: deploy-staging
  image: dtzar/helm-kubectl
  only:
    - devops-staging
  script:
    # login to ocp
    - kubectl config set-cluster k8s --server="${NWP_CLUSTER_HOST}"
    - kubectl config set clusters.k8s.certificate-authority-data ${NWP_CLUSTER_CA}
    - kubectl config set-credentials gitlab --token="${NWP_CLUSTER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<VERSION>/${VERSION_STAGING}/g" k8s/staging/deployment.yaml
    - kubectl apply -f k8s/staging/deployment.yaml


build-production:
  stage: build-production
  image: appuio/gitlab-runner-oc:3.11.0
  only:
    - devops-production
  services:
    - docker:dind
  script:
    - docker login $REGISTRY_URL -u $NWP_REGISTRY_USER -p $NWP_REGISTRY_PASS
    - docker build -t $REGISTRY_IMAGE:$VERSION_PRODUCTION . --build-arg NEXT_PUBLIC_BASE_URL=$PRODUCTION_BASE_URL --build-arg NEXT_PUBLIC_IMAGE_URL=$IMAGE_SERVICE_URL --build-arg NEXT_PUBLIC_UPLOAD_URL=$IMAGE_SERVICE_URL --build-arg NEXT_PUBLIC_NWP_AUTH_URL=$NWP_PRODUCTION_AUTH_URL --build-arg NEXT_PUBLIC_VM_AUTH_URL=$VM_PRODUCTION_AUTH_URL
    - docker push $REGISTRY_IMAGE:$VERSION_PRODUCTION
    - docker rmi $REGISTRY_IMAGE:$VERSION_PRODUCTION

deploy-production:
  stage: deploy-production
  image: dtzar/helm-kubectl
  only:
    - devops-production
  script:
    - kubectl config set-cluster k8s --server="${NWP_CLUSTER_HOST}"
    - kubectl config set clusters.k8s.certificate-authority-data ${NWP_CLUSTER_CA}
    - kubectl config set-credentials gitlab --token="${NWP_CLUSTER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<VERSION>/${VERSION_PRODUCTION}/g" k8s/production/deployment.yaml
    - kubectl apply -f k8s/production/deployment.yaml



